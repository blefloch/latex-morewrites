This is a generated file for the l3build validation system.
Don't change this file in any respect.
============================================================
TEST 1: Read token
============================================================
undefined
> \undefined=undefined.
<recently read> \undefined 
l. ...  }
\par
> \par=\par.
<recently read> \par 
l. ...  }
macro parameter character #
> macro parameter character #.
<recently read> ##
l. ...  }
begin-group character {
> begin-group character {.
<recently read> {
l. ...  }
end-group character }
> end-group character }.
<recently read> }
l. ...  }
macro:-> 
> \c_space_tl=macro:
-> .
<recently read> \c_space_tl 
l. ...  }
blank space  
> blank space  .
<recently read>  
l. ...  }
\noexpand
> \exp_not:N=\noexpand.
<recently read> \exp_not:N 
l. ...  }
[unknown command code! (0, 1)]
> \c_empty_tl=macro:
->.
<recently read> \c_empty_tl 
l. ...  }
============================================================
============================================================
TEST 2: Read expanded token
============================================================
! Undefined control sequence.
<recently read> \undefined 
l. ...  }
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.
\relax
> \scan_stop:=\relax.
<recently read> \scan_stop: 
l. ...  }
\par
> \par=\par.
<recently read> \par 
l. ...  }
macro parameter character #
> macro parameter character #.
<recently read> ##
l. ...  }
begin-group character {
> begin-group character {.
<recently read> {
l. ...  }
end-group character }
> end-group character }.
<recently read> }
l. ...  }
blank space  
> blank space  .
<recently read>  
l. ...  }
blank space  
> blank space  .
<recently read>  
l. ...  }
[unknown command code! (0, 1)]
> \c_empty_tl=macro:
->.
<recently read> \c_empty_tl 
l. ...  }
[unknown command code! (0, 1)]
> \c_empty_tl=macro:
->.
<recently read> \c_empty_tl 
l. ...  }
============================================================
============================================================
TEST 3: The assignment is global
============================================================
blank space  
> blank space  .
<recently read>  
l. ...  }
\noexpand
> \exp_not:N=\noexpand.
<recently read> \exp_not:N 
l. ...  }
[unknown command code! (0, 1)]
> \c_empty_tl=macro:
->.
<recently read> \c_empty_tl 
l. ...  }
blank space  
> blank space  .
<recently read>  
l. ...  }
[unknown command code! (0, 1)]
> \c_empty_tl=macro:
->.
<recently read> \c_empty_tl 
l. ...  }
[unknown command code! (0, 1)]
> \c_empty_tl=macro:
->.
<recently read> \c_empty_tl 
l. ...  }
============================================================
